ANY_CHAR:
 "\0x0000".."\0xFFFF"

ALPHA:
 "a".."z"
 "A".."Z"
 
DIGIT:
 "0".."9"

WHITESPACE:
 " "  { WHITESPACE }
 "\t" { WHITESPACE }

OPTWHITESPACE:
 { WHITESPACE } 

NEWLINE:
 "\r" [ OPTWHITESPACE NEWLINE ]
 "\n" [ OPTWHITESPACE NEWLINE ]

OPTNEWLINE:
 [ NEWLINE ]

OPTLINEEND:
 OPTWHITESPACE OPTNEWLINE

SEPARATOR:
 NEWLINE
 WHITESPACE 

OPTSEPARATOR:
 { SEPARATOR }

SAFE:
 "$" | "-" | "_" | "@" | "." | "&" | ":"
 
EXTRA:
 "!" | "*" | "'" | "|" | "," | "(" | ")" | "/"

ESCAPE:
 "%" HEX HEX

ESCAPEDECODE:
 ESCAPE { ESCAPE } ->  #decodeuri ESCAPE
 
HEX:
 DIGIT
 "a".."f"
 "A".."F"
 
XALPHA:
 ALPHA | DIGIT | SAFE | EXTRA | ESCAPE 

XALPHADECODE:
 ALPHA | DIGIT | SAFE | EXTRA | ESCAPEDECODE 

URI:
 XALPHA { XALPHA }

TEXT_CHAR:
 " "
 XALPHA
 NEWLINE -> ""
 
BLOCK_INSIDE:
 BLOCK
 { TEXT_CHAR } -> "target._in_text(\"" TEXT_CHAR "\");\n"

VALUE:
 URI

PARAMETERS:
 URI OPTWHITESPACE "=" VALUE -> "\"" URI "\":\"" VALUE "\","

BLOCK:
 "{" URI { WHITESPACE PARAMETERS } OPTWHITESPACE "}" OPTLINEEND                             -> "target._in_class_begin(\"" URI "\",{" PARAMETERS "});\ntarget._in_class_end();\n"
 "{" URI { WHITESPACE PARAMETERS } OPTLINEEND { OPTWHITESPACE BLOCK_INSIDE } "}" OPTLINEEND -> "target._in_class_begin(\"" URI "\",{" PARAMETERS "});\n" BLOCK_INSIDE "target._in_class_end();\n"

PROGRAM:
 BLOCK -> "target._in_begin();\n" BLOCK "target._in_end();\n"
